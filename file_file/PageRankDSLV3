function ComputePageRank(Graph g, float beta, float delta, int maxIter, propNode<float> pageRank) {
    float numNodes = g.num_nodes();
    propNode<float> pageRankNext;
    g.attachNodeProperty(pageRank = 1 / numNodes, pageRankNext = 0);
    int iterCount = 0;
    float diff;
    do {
        diff = 0.0;
        forall(v in g.nodes()) {
            float sum = 0.0;
            for (nbr in g.nodes_to(v)) {
                sum = sum + nbr.pageRank / g.count_outNbrs(nbr);
            }
            float newPageRank = (1 - delta) / numNodes + delta * sum;
            if(newPageRank - v.pageRank >= 0) {
                diff += newPageRank - v.pageRank;
            } else {
                diff += v.pageRank - newPageRank;
            }
            v.pageRankNext = newPageRank;
        }
        pageRank = pageRankNext;
        iterCount++;
    } while ((diff > beta) && (iterCount < maxIter));
}
